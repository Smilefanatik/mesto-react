{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ConfirmPopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddFormPopup.js","components/ImagePopup.js","utils/Api.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logoPath","alt","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onBinClick","currentUserData","useContext","isOwn","owner","_id","cardBinClassName","isLiked","likes","some","i","cardLikeClassName","type","onClick","name","link","length","Main","cards","onEditProfile","onAddForm","onEditAvatar","avatar","about","map","key","Footer","PopupWithForm","title","buttonName","isOpen","onSubmit","onClose","children","noValidate","ConfirmPopup","cardToDelete","onDeleteCard","e","preventDefault","EditProfilePopup","isLoading","onUpdateUser","useState","setName","setAbout","useEffect","id","value","onChange","target","placeholder","minLength","maxLength","required","EditAvatarPopup","props","inputRef","createRef","this","onUpdateAvatar","current","handleSubmit","bind","ref","Component","AddFormPopup","onAddCard","setLink","ImagePopup","selectedCard","api","baseUrl","headers","_url","_headers","fetch","method","then","response","ok","json","Promise","reject","status","values","body","JSON","stringify","cardId","authorization","App","currentUser","setCurrentUser","getUserInfo","res","catch","error","console","log","setCards","getCardsInfo","data","setCardState","setcardToDeleteState","isEditAvatarPopupOpen","setEditAvatarPopupState","isEditProfilePopupOpen","setEditProfilePopupState","isAddFormPopupOpen","setAddFormPopupState","isConfirmPopupOpen","setConfirmPopupState","setLoadingState","closeAllPopups","Provider","deleteLike","addLike","newCard","newCards","c","userData","changeProfileData","finally","userAvatar","changeAvatar","addNewCard","deleteCard","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.bfb6b4c2.chunk.js","sourcesContent":["import React from 'react';\nimport logoPath from '../images/logo.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <img className=\"header__logo\" src={logoPath} alt=\"Логотип\" />\n    </header>\n  )\n}\n\nexport default Header;\n","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n\r\n\r\n","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js'\r\n\r\nfunction Card({ card, onCardClick, onCardLike, onBinClick }) {\r\n  //Данные о текущем пользователе.\r\n  const currentUserData = React.useContext(CurrentUserContext);\r\n\r\n  //Проверка на совпадение id пользователя.\r\n  const isOwn = card.owner._id === currentUserData._id;\r\n\r\n  //Условие отображения корзины.\r\n  const cardBinClassName = (\r\n    `card__bin ${!isOwn ? 'card__bin_hidden' : ''}`\r\n  );\r\n\r\n  //Проверка на наличие собственного лайка.\r\n  const isLiked = card.likes.some(i => i._id === currentUserData._id);\r\n\r\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n  const cardLikeClassName = `card__like ${isLiked ? 'card__like_active' : ''}`;\r\n\r\n  //Обработчик клика по изображению.\r\n  function handleImageClick() {\r\n    onCardClick(card);\r\n  }\r\n\r\n  //Обработчик клика по лайку.\r\n  function handleLikeClick() {\r\n    onCardLike(card);\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    onBinClick(card);\r\n  }\r\n\r\n  return (\r\n    <li className=\"card\">\r\n      <button type=\"button\" className={cardBinClassName} onClick={handleDeleteClick} />\r\n      <img className=\"card__photo\" alt={card.name} src={card.link} onClick={handleImageClick} />\r\n      <div className=\"card__group\">\r\n        <h2 className=\"card__title\">{card.name}</h2>\r\n        <div className=\"card__like-group\">\r\n          <button type=\"button\" className={cardLikeClassName} onClick={handleLikeClick}/>\r\n          <p className=\"card__counter\">{card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\r\n\r\nfunction Main({ cards, onCardLike, onEditProfile, onAddForm, onEditAvatar, onCardClick, onBinClick }) {\r\n\r\n  //Данные о текущем пользователе.\r\n  const currentUserData = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__avatar-container\">\r\n          <img className=\"profile__avatar\" alt=\"аватар\" src={currentUserData.avatar} />\r\n          <div className=\"profile__overlay\">\r\n            <button type=\"button\" onClick={onEditAvatar} className=\"profile__edit-avatar\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"profile__info\">\r\n          <div className=\"profile__name-group\">\r\n            <h1 className=\"profile__name\" type=\"\">{currentUserData.name}</h1>\r\n            <button type=\"button\" onClick={onEditProfile} className=\"profile__edit-button\" />\r\n          </div>\r\n          <p className=\"profile__about\">{currentUserData.about}</p>\r\n        </div>\r\n        <button type=\"button\" onClick={onAddForm} className=\"profile__add-button\" />\r\n      </section>\r\n\r\n      <section className=\"cards\">\r\n        <ul className=\"cards__list\">\r\n          {cards.map((card) => (\r\n            <Card card={card} key={card._id}\r\n            onBinClick={onBinClick}\r\n            onCardClick={onCardClick}\r\n            onCardLike={onCardLike} />\r\n          )\r\n          )}\r\n        </ul>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  )\n}\n\nexport default Footer;\n","import React from 'react';\r\n\r\nfunction PopupWithForm({ name, title, buttonName, isOpen, onSubmit, onClose, children }) {\r\n\r\n  return (\r\n    <div className={`popup popup_type_${name} ${isOpen}`}>\r\n      <form name={name}\r\n        className={`popup__container popup__form popup__container_type_${name}`}\r\n        onSubmit={onSubmit}\r\n        noValidate>\r\n        <button type=\"reset\" className=\"popup__close-icon\" onClick={onClose} />\r\n        <h2 className=\"popup__title\">{title}</h2>\r\n        {children}\r\n        <button type=\"submit\" className=\"popup__save-button\">{buttonName}</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nexport default PopupWithForm;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nexport default function ConfirmPopup({ isOpen, cardToDelete, onDeleteCard, onClose }) {\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onDeleteCard(cardToDelete)\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm name=\"confirm\"\r\n      title=\"Вы уверены?\"\r\n      buttonName=\"Да\"\r\n      isOpen={isOpen ? \"popup_opened\" : \"\"}\r\n      onSubmit={handleSubmit}\r\n      onClose={onClose} />\r\n  )\r\n}\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\r\n\r\nexport default function EditProfilePopup({ isOpen, isLoading, onUpdateUser, onClose }) {\r\n\r\n  //Данные о текущем пользователе.\r\n  const currentUserData = React.useContext(CurrentUserContext);\r\n\r\n  //Переменная состояния с именем пользователя.\r\n  const [name, setName] = React.useState('');\r\n  //Переменная состояния с описанием пользователя.\r\n  const [about, setAbout] = React.useState('');\r\n\r\n  //Обновить данные пользователя исходя из контекста.\r\n  React.useEffect(() => {\r\n    setName(currentUserData.name);\r\n    setAbout(currentUserData.about);\r\n  }, [currentUserData]);\r\n\r\n  // Обработчик изменения поля ввода имени.\r\n  function handleNameChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  // Обработчик изменения поля ввода описания.\r\n  function handleInfoChange(e) {\r\n    setAbout(e.target.value);\r\n  }\r\n\r\n  //Обработчик на сабмит.\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    // Передать информацию о пользователе на сервер.\r\n    onUpdateUser({ name, about });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm name=\"edit-profile\"\r\n      title=\"Редактировать профиль\"\r\n      buttonName={isLoading ? \"Сохранение...\" : \"Сохранить\"}\r\n      isOpen={isOpen ? \"popup_opened\" : \"\"}\r\n      onSubmit={handleSubmit}\r\n      onClose={onClose}>\r\n      <input id=\"name-input\"\r\n        name=\"name\"\r\n        type=\"text\"\r\n        value={name || ''}\r\n        onChange={handleNameChange}\r\n        className=\"popup__input popup__input_element_name\"\r\n        placeholder=\"Имя\"\r\n        minLength=\"2\"\r\n        maxLength=\"40\"\r\n        required />\r\n      <span id=\"name-input-error\" className=\"popup__input-error\"></span>\r\n      <input id=\"about-input\"\r\n        name=\"about\"\r\n        type=\"text\"\r\n        value={about || ''}\r\n        onChange={handleInfoChange}\r\n        className=\"popup__input popup__input_element_about\"\r\n        placeholder=\"О себе\"\r\n        minLength=\"2\"\r\n        maxLength=\"200\"\r\n        required />\r\n      <span id=\"about-input-error\" className=\"popup__input-error\"></span>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nclass EditAvatarPopup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.inputRef = React.createRef();\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    this.props.onUpdateAvatar({\r\n      avatar: this.inputRef.current.value,\r\n    });\r\n    this.inputRef.current.value = \"\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <PopupWithForm name=\"edit-avatar\"\r\n        title=\"Обновить аватар\"\r\n        buttonName={this.props.isLoading ? \"Сохранение...\" : \"Сохранить\"}\r\n        isOpen={this.props.isOpen ? \"popup_opened\" : \"\"}\r\n        onSubmit={this.handleSubmit.bind(this)}\r\n        onClose={this.props.onClose}>\r\n        <input id=\"link-input\" name=\"avatar\"\r\n          type=\"url\"\r\n          ref={this.inputRef}\r\n          className=\"popup__input popup__input_element_link\"\r\n          placeholder=\"Ссылка на картинку\"\r\n          required />\r\n        <span id=\"link-input-error\" className=\"popup__input-error\"></span>\r\n      </PopupWithForm>\r\n    )\r\n  }\r\n}\r\nexport default EditAvatarPopup;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nexport default function AddFormPopup({ isOpen, isLoading, onAddCard, onClose }) {\r\n\r\n  //Переменная состояния с названием карточки.\r\n  const [name, setName] = React.useState('');\r\n  //Переменная состояния с ссылкой на картинку.\r\n  const [link, setLink] = React.useState('');\r\n\r\n  // Обработчик изменения поля ввода имени.\r\n  function handleNameChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  // Обработчик изменения поля ввода описания.\r\n  function handleLinkChange(e) {\r\n    setLink(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    // Передать информацию о пользователе на сервер.\r\n    onAddCard({ name, link });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm name=\"add-form\"\r\n      title=\"Новое место\"\r\n      buttonName={isLoading ? \"Сохранение...\" : \"Создать\"}\r\n      isOpen={isOpen ? \"popup_opened\" : \"\"}\r\n      onSubmit={handleSubmit}\r\n      onClose={onClose}>\r\n      <input id=\"place-input\"\r\n        value={name || ''}\r\n        onChange={handleNameChange}\r\n        name=\"name\"\r\n        type=\"text\"\r\n        className=\"popup__input popup__input__element_place\"\r\n        placeholder=\"Название\"\r\n        minLength=\"1\"\r\n        maxLength=\"30\"\r\n        required />\r\n      <span id=\"place-input-error\" className=\"popup__input-error\"></span>\r\n      <input id=\"link-input\"\r\n        value={link || ''}\r\n        onChange={handleLinkChange}\r\n        name=\"link\"\r\n        type=\"url\"\r\n        className=\"popup__input popup__input_element_link\"\r\n        placeholder=\"Ссылка на картинку\"\r\n        required />\r\n      <span id=\"link-input-error\" className=\"popup__input-error\"></span>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nfunction ImagePopup({ selectedCard, onClose }) {\r\n  let name = '';\r\n  let link = '';\r\n  if (selectedCard) {\r\n    name = selectedCard.name;\r\n    link = selectedCard.link;\r\n  }\r\n\r\n  return (\r\n    <div className={`popup popup_type_image ${selectedCard ? \"popup_opened\" : \"\"}`}>\r\n      <div className=\"popup__container popup__container_type_image\">\r\n        <button type=\"reset\" className=\"popup__close-icon\" onClick={onClose} />\r\n        <img className=\"popup__image\" src={link} alt={name} />\r\n        <p className=\"popup__text\">{name}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImagePopup;\r\n","class Api {\n  constructor({ baseUrl, headers = {} }) {\n    this._url = baseUrl;\n    this._headers = headers;\n  }\n\n  //Получить начальную информацию о пользователе.\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        };\n        return Promise.reject(`Ошибка: ${response.status}`);\n      })\n  }\n\n  //Получить начальный массив с карточками.\n  getCardsInfo() {\n    return fetch(`${this._url}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        };\n        return Promise.reject(`Ошибка: ${response.status}`);\n      })\n  }\n\n  //Изменить информацию о пользователе.\n  changeProfileData(values) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: values.name,\n        about: values.about\n      })\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        };\n        return Promise.reject(`Ошибка: ${response.status}`);\n      })\n  }\n\n  //Добавить новую карточку.\n  addNewCard(values) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: values.name,\n        link: values.link\n      })\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        };\n        return Promise.reject(`Ошибка: ${response.status}`);\n      })\n  }\n\n  //Удалить карточку.\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        };\n      })\n  }\n\n  //Поставить лайк.\n  addLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this._headers,\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        };\n        return Promise.reject(`Ошибка: ${response.status}`);\n      })\n  }\n\n  //Удалить лайк.\n  deleteLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        };\n        return Promise.reject(`Ошибка: ${response.status}`);\n      })\n  }\n\n  changeAvatar(values) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(values)\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        };\n        return Promise.reject(`Ошибка: ${response.status}`);\n      })\n  }\n}\n\n//Создать экземпляр класса Api для связи с сервером.\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-13',\n  headers: {\n    authorization: '8a32d376-0349-4b99-b4c1-e80b592cabc8',\n    'Content-Type': 'application/json'\n  }\n});\n\n\n","import React from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport ConfirmPopup from './ConfirmPopup';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddFormPopup from './AddFormPopup';\r\nimport ImagePopup from './ImagePopup';\r\nimport { api } from '../utils/Api.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js'\r\n\r\nfunction App() {\r\n\r\n  //Переменная состояния с данными текущего пользователя.\r\n  const [currentUser, setCurrentUser] = React.useState({});\r\n  //Получить начальную информацию о пользователе.\r\n  React.useEffect(() => {\r\n    api.getUserInfo()\r\n      .then((res) => {\r\n        //Вывести начальные данные пользователя.\r\n        setCurrentUser(res);\r\n      })\r\n      .catch((error) => {\r\n        console.log(`Ошибка: ${error}`);\r\n      })\r\n  }, [])\r\n\r\n  //Переменная состояния с данными карточек.\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  //Получить начальный массив с тридцатью карточками.\r\n  React.useEffect(() => {\r\n    api.getCardsInfo()\r\n      .then((data) => {\r\n        //Обновить данные карточек.\r\n        setCards(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(`Ошибка: ${error}`);\r\n      })\r\n  }, [])\r\n\r\n  //Обработчик клика по лайку.\r\n  function handleCardLike(card) {\r\n    //Проверка на наличие собственного лайка.\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n\r\n    //Отправляем запрос на сервер в зависимости от наличия лайка.\r\n    const putOrDelete = () => isLiked ? api.deleteLike(card._id) : api.addLike(card._id);\r\n    putOrDelete()\r\n      .then((newCard) => {\r\n        //Создать новый массив карточек, подставляя новые данные карточки.\r\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n        // Обновляем состояние.\r\n        setCards(newCards)\r\n      })\r\n      .catch((error) => {\r\n        console.log(`Ошибка: ${error}`);\r\n      })\r\n  }\r\n\r\n  //Обработчик удаления карточки.\r\n  function handleCardDelete(card) {\r\n    api.deleteCard(card._id)\r\n      .then(() => {\r\n        //Создать новый массив карточек, подставляя новые данные карточки.\r\n        const newCards = cards.filter(function (c) {\r\n          return c._id !== card._id\r\n        })\r\n        // Обновляем состояние.\r\n        setCards(newCards)\r\n      })\r\n      .catch((error) => {\r\n        console.log(`Ошибка: ${error}`);\r\n      })\r\n      .finally(() => {\r\n        closeAllPopups();\r\n      });\r\n  }\r\n\r\n  //Внутреннее состояние для передачи данных карточки в попап с изображением.\r\n  const [selectedCard, setCardState] = React.useState(null);\r\n  function handleCardClick(card) {\r\n    setCardState(card);\r\n  }\r\n\r\n  //Внутреннее состояние для передачи данных карточки в попап с изображением.\r\n  const [cardToDelete, setcardToDeleteState] = React.useState(null);\r\n\r\n  //Внутреннее состояние попапа редактирования аватара и его изменение.\r\n  const [isEditAvatarPopupOpen, setEditAvatarPopupState] = React.useState(false);\r\n  function handleEditAvatarClick() {\r\n    setEditAvatarPopupState(true);\r\n  }\r\n\r\n  //Внутреннее состояние попапа редактирования профиля и его изменение.\r\n  const [isEditProfilePopupOpen, setEditProfilePopupState] = React.useState(false);\r\n  function handleEditProfileClick() {\r\n    setEditProfilePopupState(true);\r\n  }\r\n\r\n  //Внутреннее состояние попапа создания карточки и его изменение.\r\n  const [isAddFormPopupOpen, setAddFormPopupState] = React.useState(false);\r\n  function handleAddFormClick() {\r\n    setAddFormPopupState(true);\r\n  }\r\n\r\n  //Внутреннее состояние попапа удаления карточки.\r\n  const [isConfirmPopupOpen, setConfirmPopupState] = React.useState(false);\r\n  function handleBinClick(card) {\r\n    setConfirmPopupState(true);\r\n    setcardToDeleteState(card)\r\n  }\r\n\r\n  //Внутреннее состояние индикатора загрузки запроса.\r\n  const [isLoading, setLoadingState] = React.useState(false);\r\n\r\n  //Закрытие попапов.\r\n  function closeAllPopups() {\r\n    setEditProfilePopupState(false);\r\n    setEditAvatarPopupState(false);\r\n    setAddFormPopupState(false);\r\n    setConfirmPopupState(false);\r\n    setCardState(null);\r\n    setcardToDeleteState(null)\r\n  }\r\n\r\n  //Обработчик сабмита формы редактирования профиля.\r\n  function handleUpdateUser(userData) {\r\n    setLoadingState(true);\r\n\r\n    api.changeProfileData(userData)\r\n      .then((res) => {\r\n        setCurrentUser(res)\r\n      })\r\n      .catch((error) => {\r\n        console.log(`Ошибка: ${error}`);\r\n      })\r\n      .finally(() => {\r\n        closeAllPopups();\r\n        setLoadingState(false);\r\n      });\r\n  }\r\n\r\n  //Обработчик сабмита формы редактирования аватара.\r\n  function handleUpdateAvatar(userAvatar) {\r\n    setLoadingState(true);\r\n\r\n    api.changeAvatar(userAvatar)\r\n      .then((res) => {\r\n        setCurrentUser(res)\r\n      })\r\n      .catch((error) => {\r\n        console.log(`Ошибка: ${error}`);\r\n      })\r\n      .finally(() => {\r\n        closeAllPopups();\r\n        setLoadingState(false);\r\n      });\r\n  }\r\n\r\n  //Обработчик сабмита формы добавления новой карточки.\r\n  function handleAddPlaceSubmit(newCard) {\r\n    setLoadingState(true);\r\n\r\n    api.addNewCard(newCard)\r\n      .then((res) => {\r\n        setCards([...cards, res]);\r\n      })\r\n      .catch((error) => {\r\n        console.log(`Ошибка: ${error}`);\r\n      })\r\n      .finally(() => {\r\n        closeAllPopups();\r\n        setLoadingState(false);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"page\">\r\n        <Header />\r\n        <Main cards={cards}\r\n          onCardLike={handleCardLike}\r\n          onEditProfile={handleEditProfileClick}\r\n          onAddForm={handleAddFormClick}\r\n          onEditAvatar={handleEditAvatarClick}\r\n          onCardClick={handleCardClick}\r\n          onBinClick={handleBinClick} />\r\n\r\n        <EditProfilePopup isOpen={isEditProfilePopupOpen}\r\n          isLoading={isLoading}\r\n          onUpdateUser={handleUpdateUser}\r\n          onClose={closeAllPopups} />\r\n\r\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen}\r\n          isLoading={isLoading}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n          onClose={closeAllPopups} />\r\n\r\n        <AddFormPopup isOpen={isAddFormPopupOpen}\r\n          isLoading={isLoading}\r\n          onAddCard={handleAddPlaceSubmit}\r\n          onClose={closeAllPopups} />\r\n\r\n        <ConfirmPopup isOpen={isConfirmPopupOpen}\r\n          cardToDelete={cardToDelete}\r\n          onDeleteCard={handleCardDelete}\r\n          onClose={closeAllPopups} />\r\n\r\n        <ImagePopup selectedCard={selectedCard} onClose={closeAllPopups} />\r\n        <Footer />\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";"],"sourceRoot":""}